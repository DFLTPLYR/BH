[gd_resource type="ShaderMaterial" load_steps=6 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform sampler2D color_gradient;
uniform sampler2D noiseTexture;
uniform float speed: hint_range (0.0,5.0);
uniform float variation: hint_range (0.0,1.0);
uniform float width: hint_range (0.0,1.0);

void fragment(){
	
	vec2 noise_uv = vec2(UV.x+TIME*speed, UV.y-TIME*speed);
	float noise_sample = texture(noiseTexture, noise_uv).r;
	float x_offset = noise_sample*variation - variation/2.0;
	COLOR = texture(color_gradient, vec2((UV.x-0.5)/width + 0.5 + x_offset/width, UV.y));
}"

[sub_resource type="Gradient" id=2]
colors = PoolColorArray( 0, 1, 1, 1, 0.437469, 0.86166, 0.917969, 1 )

[sub_resource type="GradientTexture" id=3]
gradient = SubResource( 2 )

[sub_resource type="OpenSimplexNoise" id=5]

[sub_resource type="NoiseTexture" id=4]
noise = SubResource( 5 )

[resource]
shader = SubResource( 1 )
shader_param/speed = null
shader_param/variation = null
shader_param/width = 0.0
shader_param/color_gradient = SubResource( 3 )
shader_param/noiseTexture = SubResource( 4 )
